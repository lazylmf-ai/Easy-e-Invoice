name: AI Code Scan (TS/JS/HTML/Shell/CSS)
on:
  pull_request:
  push:
    branches: [ main, master ]

permissions:
  contents: read
  security-events: write
  pull-requests: write
  actions: read

jobs:
  # Deep security queries (JS/TS) + Copilot Autofix
  codeql:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: github/codeql-action/init@v3
        with:
          # JS/TS both covered; either id works
          languages: javascript-typescript
      - uses: github/codeql-action/analyze@v3
  # (CodeQL supports JavaScript/TypeScript and shows alerts in Code scanning.) 

  # TypeScript type-check + ESLint → SARIF (enables Copilot Autofix for ESLint)
  ts_js_quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node (w/ cache)
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Install project deps; also bring in tools if not in your devDeps (no-save avoids lockfile edits)
      - name: Install deps + quality toolchain
        run: |
          npm install
          npm install --no-save eslint @eslint/js typescript typescript-eslint @microsoft/eslint-formatter-sarif

      - name: TypeScript type-check
        run: npx tsc --noEmit

      - name: ESLint (SARIF)
        run: npx eslint . -f @microsoft/eslint-formatter-sarif -o eslint.sarif || true

      - name: Upload ESLint SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint.sarif
          wait-for-processing: true

  # Semgrep bug/security rules → SARIF
  semgrep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Semgrep
        run: pipx install semgrep
      - name: Semgrep (p/ci ruleset)
        run: semgrep --config p/ci --error --sarif --output semgrep.sarif || true
      - name: Upload Semgrep SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
          wait-for-processing: true

  # Secrets in history / new PRs
  gitleaks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: gitleaks/gitleaks-action@v2

  # Dependency vulnerabilities (npm, etc.)
  osv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: google/osv-scanner-action@v1
        with:
          scan-args: --recursive .

  # HTML/CSS/Shell hygiene
  html_css_shell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: '20', cache: 'npm' }
      - name: Install linters
        run: |
          npm install --no-save htmlhint stylelint stylelint-config-standard
      - name: HTMLHint
        run: npx htmlhint "**/*.html"
      - name: Stylelint
        run: npx stylelint "**/*.css"
      - name: ShellCheck
        uses: ludeeus/action-shellcheck@master
