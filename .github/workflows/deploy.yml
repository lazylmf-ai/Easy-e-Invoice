name: Deploy

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["Test Suite"]
    types:
      - completed
    branches: [ main ]

env:
  NODE_VERSION: '20'
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  deploy-api:
    name: Deploy API
    runs-on: ubuntu-latest
    if: github.event.workflow_run.conclusion == 'success' || github.event_name == 'push'
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Run pre-deployment tests
        run: |
          npm run test:unit
          npm run test:integration
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          workingDirectory: 'apps/api'
          command: deploy --env production

      - name: Run smoke tests
        run: |
          npm run test:smoke
        env:
          API_URL: ${{ secrets.PRODUCTION_API_URL }}

  deploy-web:
    name: Deploy Web App
    runs-on: ubuntu-latest
    needs: deploy-api
    environment: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build web application
        run: npm run build:web
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.PRODUCTION_API_URL }}
          NEXT_PUBLIC_ENVIRONMENT: production

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: './apps/web'
          vercel-args: '--prod'

  post-deploy:
    name: Post-deployment
    runs-on: ubuntu-latest
    needs: [deploy-api, deploy-web]

    steps:
      - name: Run production health checks
        run: |
          # API health check
          curl -f ${{ secrets.PRODUCTION_API_URL }}/health || exit 1
          
          # Web app health check
          curl -f ${{ secrets.PRODUCTION_WEB_URL }}/api/health || exit 1

      - name: Notify deployment success
        if: success()
        run: |
          echo "ðŸš€ Deployment completed successfully!"
          echo "API: ${{ secrets.PRODUCTION_API_URL }}"
          echo "Web: ${{ secrets.PRODUCTION_WEB_URL }}"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "ðŸ’¥ Deployment failed!"
          echo "Please check the deployment logs and rollback if necessary"
          exit 1